{"version":3,"sources":["webpack://freighterApi/webpack/universalModuleDefinition","webpack://freighterApi/webpack/bootstrap","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@shared/constants/services.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@shared/api/helpers/extensionMessaging.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/getPublicKey.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@shared/api/external.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/signTransaction.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/isConnected.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/getNetwork.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/getNetworkDetails.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/isAllowed.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/setAllowed.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/getUserInfo.ts","webpack://freighterApi/src/Users/piyalbasu/Stellar/lyra/@stellar/freighter-api/src/index.ts"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SERVICE_TYPES","EXTERNAL_SERVICE_TYPES","sendMessageToContentScript","msg","MESSAGE_ID","Date","now","Math","random","window","postMessage","source","messageId","location","origin","Promise","resolve","requestTimeout","type","REQUEST_CONNECTION_STATUS","setTimeout","isConnected","removeEventListener","messageListener","event","data","messagedId","clearTimeout","addEventListener","getPublicKey","isBrowser","async","response","publicKey","error","REQUEST_ACCESS","e","console","requestPublicKey","signTransaction","transactionXdr","opts","accountToSign","network","_accountToSign","networkPassphrase","signedTransaction","SUBMIT_TRANSACTION","submitTransaction","freighter","requestConnectionStatus","getNetwork","REQUEST_NETWORK","requestNetwork","getNetworkDetails","networkDetails","networkName","networkUrl","REQUEST_NETWORK_DETAILS","requestNetworkDetails","isAllowed","REQUEST_ALLOWED_STATUS","requestAllowedStatus","setAllowed","SET_ALLOWED_STATUS","setAllowedStatus","getUserInfo","userInfo","REQUEST_USER_INFO","requestUserInfo"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"freighterApi\"] = factory();\n\telse\n\t\troot[\"freighterApi\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export enum SERVICE_TYPES {\n  CREATE_ACCOUNT = \"CREATE_ACCOUNT\",\n  FUND_ACCOUNT = \"FUND_ACCOUNT\",\n  ADD_ACCOUNT = \"ADD_ACCOUNT\",\n  IMPORT_ACCOUNT = \"IMPORT_ACCOUNT\",\n  IMPORT_HARDWARE_WALLET = \"IMPORT_HARDWARE_WALLET\",\n  LOAD_ACCOUNT = \"LOAD_ACCOUNT\",\n  MAKE_ACCOUNT_ACTIVE = \"MAKE_ACCOUNT_ACTIVE\",\n  UPDATE_ACCOUNT_NAME = \"UPDATE_ACCOUNT_NAME\",\n  GET_MNEMONIC_PHRASE = \"GET_MNEMONIC_PHRASE\",\n  CONFIRM_MNEMONIC_PHRASE = \"CONFIRM_MNEMONIC_PHRASE\",\n  RECOVER_ACCOUNT = \"RECOVER_ACCOUNT\",\n  CONFIRM_PASSWORD = \"CONFIRM_PASSWORD\",\n  REJECT_ACCESS = \"REJECT_ACCESS\",\n  GRANT_ACCESS = \"GRANT_ACCESS\",\n  SIGN_TRANSACTION = \"SIGN_TRANSACTION\",\n  HANDLE_SIGNED_HW_TRANSACTION = \"HANDLE_SIGNED_HW_TRANSACTION\",\n  REJECT_TRANSACTION = \"REJECT_TRANSACTION\",\n  SIGN_FREIGHTER_TRANSACTION = \"SIGN_FREIGHTER_TRANSACTION\",\n  SIGN_FREIGHTER_SOROBAN_TRANSACTION = \"SIGN_FREIGHTER_SOROBAN_TRANSACTION\",\n  ADD_RECENT_ADDRESS = \"ADD_RECENT_ADDRESS\",\n  LOAD_RECENT_ADDRESSES = \"LOAD_RECENT_ADDRESSES\",\n  SIGN_OUT = \"SIGN_OUT\",\n  SHOW_BACKUP_PHRASE = \"SHOW_BACKUP_PHRASE\",\n  SAVE_SETTINGS = \"SAVE_SETTINGS\",\n  LOAD_SETTINGS = \"LOAD_SETTINGS\",\n  GET_CACHED_ASSET_ICON = \"GET_CACHED_ASSET_ICON\",\n  CACHE_ASSET_ICON = \"CACHE_ASSET_ICON\",\n  GET_CACHED_ASSET_DOMAIN = \"GET_CACHED_ASSET_DOMAIN\",\n  CACHE_ASSET_DOMAIN = \"CACHE_ASSET_DOMAIN\",\n  GET_BLOCKED_ACCOUNTS = \"GET_BLOCKED_ACCOUNTS\",\n  GET_BLOCKED_DOMAINS = \"GET_BLOCKED_DOMAINS\",\n  ADD_CUSTOM_NETWORK = \"ADD_CUSTOM_NETWORK\",\n  CHANGE_NETWORK = \"CHANGE_NETWORK\",\n  REMOVE_CUSTOM_NETWORK = \"REMOVE_CUSTOM_NETWORK\",\n  EDIT_CUSTOM_NETWORK = \"EDIT_CUSTOM_NETWORK\",\n  RESET_EXP_DATA = \"RESET_EXP_DATA\",\n  ADD_TOKEN_ID = \"ADD_TOKEN_ID\",\n  GET_TOKEN_IDS = \"GET_TOKEN_IDS\",\n}\n\nexport enum EXTERNAL_SERVICE_TYPES {\n  REQUEST_ACCESS = \"REQUEST_ACCESS\",\n  SUBMIT_TRANSACTION = \"SUBMIT_TRANSACTION\",\n  REQUEST_NETWORK = \"REQUEST_NETWORK\",\n  REQUEST_NETWORK_DETAILS = \"REQUEST_NETWORK_DETAILS\",\n  REQUEST_CONNECTION_STATUS = \"REQUEST_CONNECTION_STATUS\",\n  REQUEST_ALLOWED_STATUS = \"REQUEST_ALLOWED_STATUS\",\n  SET_ALLOWED_STATUS = \"SET_ALLOWED_STATUS\",\n  REQUEST_USER_INFO = \"REQUEST_USER_INFO\",\n}\n\nexport const EXTERNAL_MSG_REQUEST = \"FREIGHTER_EXTERNAL_MSG_REQUEST\";\nexport const EXTERNAL_MSG_RESPONSE = \"FREIGHTER_EXTERNAL_MSG_RESPONSE\";\n\ndeclare const DEV_SERVER: string;\nconst _DEV_SERVER = DEV_SERVER;\nexport { _DEV_SERVER as DEV_SERVER };\n","import browser from \"webextension-polyfill\";\nimport {\n  DEV_SERVER,\n  EXTERNAL_MSG_RESPONSE,\n  EXTERNAL_MSG_REQUEST,\n  EXTERNAL_SERVICE_TYPES,\n  SERVICE_TYPES,\n} from \"../../constants/services\";\nimport { Response } from \"../types\";\n\ninterface Msg {\n  [key: string]: any;\n  type: EXTERNAL_SERVICE_TYPES | SERVICE_TYPES;\n}\n\nexport const sendMessageToContentScript = (msg: Msg): Promise<Response> => {\n  /* \n    In the case of multiple calls coming in sequentially, we use this MESSAGE_ID to make sure we're responding to\n    the appropriate message sender. Otherwise, we can run into race conditions where we simply resolve all \n    sent messages with the first thing that comes back.\n  */\n  const MESSAGE_ID = Date.now() + Math.random();\n\n  window.postMessage(\n    { source: EXTERNAL_MSG_REQUEST, messageId: MESSAGE_ID, ...msg },\n    window.location.origin,\n  );\n  return new Promise((resolve) => {\n    let requestTimeout = 0;\n\n    /* \n      In the case that Freighter is not installed at all, any messages to \n      background from freighter-api will hang forever and not respond in any way. \n      This is especially a problem for the isConnected method, because this is \n      likely to be called in a situation where Freighter isn't installed.\n      To prevent this, we add a timeout to automatically resolve in the event \n      Freighter doesn't respond in a timely fashion to this method.\n    */\n    if (msg.type === EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS) {\n      requestTimeout = setTimeout(() => {\n        resolve({ isConnected: false } as Response);\n        window.removeEventListener(\"message\", messageListener);\n      }, 2000);\n    }\n\n    const messageListener = (event: { source: any; data: Response }) => {\n      // We only accept messages from ourselves\n      if (event.source !== window) return;\n      // Only respond to messages tagged as being from our content script\n      if (event?.data?.source !== EXTERNAL_MSG_RESPONSE) return;\n      // Only respond to messages that this instance of sendMessageToContentScript sent\n      if (event?.data?.messagedId !== MESSAGE_ID) return;\n\n      resolve(event.data);\n      window.removeEventListener(\"message\", messageListener);\n      clearTimeout(requestTimeout);\n    };\n    window.addEventListener(\"message\", messageListener, false);\n  });\n};\n\nexport const sendMessageToBackground = async (msg: Msg): Promise<Response> => {\n  let res;\n  if (DEV_SERVER) {\n    // treat this as an external call because we're making the call from the browser, not the popup\n    res = await sendMessageToContentScript(msg);\n  } else {\n    res = await browser.runtime.sendMessage(msg);\n  }\n\n  return res;\n};\n","import { requestPublicKey } from \"@shared/api/external\";\nimport { isBrowser } from \".\";\n\nexport const getPublicKey = (): Promise<string> =>\n  isBrowser ? requestPublicKey() : Promise.resolve(\"\");\n","import { EXTERNAL_SERVICE_TYPES } from \"../constants/services\";\nimport { sendMessageToContentScript } from \"./helpers/extensionMessaging\";\nimport { UserInfo } from \"./types\";\n\nexport const requestPublicKey = async (): Promise<string> => {\n  let response = { publicKey: \"\", error: \"\" };\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ACCESS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { publicKey, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return publicKey;\n};\n\nexport const submitTransaction = async (\n  transactionXdr: string,\n  opts?:\n    | string\n    | {\n        network?: string;\n        accountToSign?: string;\n        networkPassphrase?: string;\n      },\n  accountToSign?: string,\n): Promise<string> => {\n  let network = \"\";\n  let _accountToSign = \"\";\n  let networkPassphrase = \"\";\n\n  /* \n  As of v1.3.0, this method now accepts an object as its second param. \n  Previously, it accepted optional second and third string parameters.\n  This logic maintains backwards compatibility for older versions\n  */\n  if (typeof opts === \"object\") {\n    network = opts.network || \"\";\n    _accountToSign = opts.accountToSign || \"\";\n    networkPassphrase = opts.networkPassphrase || \"\";\n  } else {\n    network = opts || \"\";\n    _accountToSign = accountToSign || \"\";\n  }\n\n  let response = { signedTransaction: \"\", error: \"\" };\n  try {\n    response = await sendMessageToContentScript({\n      transactionXdr,\n      network,\n      networkPassphrase,\n      accountToSign: _accountToSign,\n      type: EXTERNAL_SERVICE_TYPES.SUBMIT_TRANSACTION,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n  const { signedTransaction, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return signedTransaction;\n};\n\nexport const requestNetwork = async (): Promise<string> => {\n  let response = { network: \"\", error: \"\" };\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { network, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return network;\n};\n\nexport const requestNetworkDetails = async (): Promise<{\n  network: string;\n  networkUrl: string;\n  networkPassphrase: string;\n}> => {\n  let response = {\n    networkDetails: {\n      network: \"\",\n      networkName: \"\",\n      networkUrl: \"\",\n      networkPassphrase: \"\",\n    },\n    error: \"\",\n  };\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_NETWORK_DETAILS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { networkDetails, error } = response;\n  const { network, networkUrl, networkPassphrase } = networkDetails;\n\n  if (error) {\n    throw error;\n  }\n  return { network, networkUrl, networkPassphrase };\n};\n\nexport const requestConnectionStatus = async (): Promise<boolean> => {\n  let response = {\n    isConnected: false,\n  };\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_CONNECTION_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  return response.isConnected;\n};\n\nexport const requestAllowedStatus = async (): Promise<boolean> => {\n  let response = {\n    isAllowed: false,\n  };\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_ALLOWED_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  return response.isAllowed;\n};\n\nexport const setAllowedStatus = async (): Promise<boolean> => {\n  let response = {\n    isAllowed: false,\n    error: \"\",\n  };\n\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.SET_ALLOWED_STATUS,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { isAllowed, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return isAllowed;\n};\n\nexport const requestUserInfo = async (): Promise<UserInfo> => {\n  let response = { userInfo: { publicKey: \"\" }, error: \"\" };\n  try {\n    response = await sendMessageToContentScript({\n      type: EXTERNAL_SERVICE_TYPES.REQUEST_USER_INFO,\n    });\n  } catch (e) {\n    console.error(e);\n  }\n\n  const { userInfo, error } = response;\n\n  if (error) {\n    throw error;\n  }\n  return userInfo;\n};\n","import { submitTransaction } from \"@shared/api/external\";\nimport { isBrowser } from \".\";\n\nexport const signTransaction = (\n  transactionXdr: string,\n  opts?: {\n    network?: string;\n    networkPassphrase?: string;\n    accountToSign?: string;\n  }\n): Promise<string> =>\n  isBrowser ? submitTransaction(transactionXdr, opts) : Promise.resolve(\"\");\n","import { requestConnectionStatus } from \"@shared/api/external\";\nimport { isBrowser } from \".\";\n\nexport const isConnected = (): Promise<boolean> => {\n  if (!isBrowser) return Promise.resolve(false);\n\n  if (window.freighter) {\n    return Promise.resolve(window.freighter);\n  }\n\n  return requestConnectionStatus();\n};\n","import { requestNetwork } from \"@shared/api/external\";\nimport { isBrowser } from \".\";\n\nexport const getNetwork = (): Promise<string> =>\n  isBrowser ? requestNetwork() : Promise.resolve(\"\");\n","import { requestNetworkDetails } from \"@shared/api/external\";\nimport { isBrowser } from \".\";\n\nexport const getNetworkDetails = (): Promise<{\n  network: string;\n  networkUrl: string;\n  networkPassphrase: string;\n}> =>\n  isBrowser\n    ? requestNetworkDetails()\n    : Promise.resolve({\n        network: \"\",\n        networkUrl: \"\",\n        networkPassphrase: \"\",\n      });\n","import { requestAllowedStatus } from \"@shared/api/external\";\nimport { isBrowser } from \".\";\n\nexport const isAllowed = (): Promise<boolean> =>\n  isBrowser ? requestAllowedStatus() : Promise.resolve(false);\n","import { setAllowedStatus } from \"@shared/api/external\";\nimport { isBrowser } from \".\";\n\nexport const setAllowed = (): Promise<boolean> =>\n  isBrowser ? setAllowedStatus() : Promise.resolve(false);\n","import { requestUserInfo } from \"@shared/api/external\";\nimport { isBrowser } from \".\";\n\nexport const getUserInfo = (): Promise<{ publicKey: string }> =>\n  isBrowser ? requestUserInfo() : Promise.resolve({ publicKey: \"\" });\n","import { getPublicKey } from \"./getPublicKey\";\nimport { signTransaction } from \"./signTransaction\";\nimport { isConnected } from \"./isConnected\";\nimport { getNetwork } from \"./getNetwork\";\nimport { getNetworkDetails } from \"./getNetworkDetails\";\nimport { isAllowed } from \"./isAllowed\";\nimport { setAllowed } from \"./setAllowed\";\nimport { getUserInfo } from \"./getUserInfo\";\n\nexport const isBrowser = typeof window !== \"undefined\";\n\nexport {\n  getPublicKey,\n  signTransaction,\n  isConnected,\n  getNetwork,\n  getNetworkDetails,\n  isAllowed,\n  setAllowed,\n  getUserInfo,\n};\nexport default {\n  getPublicKey,\n  signTransaction,\n  isConnected,\n  getNetwork,\n  getNetworkDetails,\n  isAllowed,\n  setAllowed,\n  getUserInfo,\n};\n"],"sourceRoot":""}